#!/usr/bin/env python3
"""
Cr√©ation des prix Pro corrig√©s pour Francis (49‚Ç¨ exactement)
"""

import requests

# Cl√© Stripe
STRIPE_SECRET_KEY = "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"

def create_corrected_pro_prices():
    """Cr√©er les prix Pro avec 49‚Ç¨ exactement"""
    print("üîç Cr√©ation des prix Pro corrig√©s...")
    
    headers = {
        "Authorization": f"Bearer {STRIPE_SECRET_KEY}",
        "Content-Type": "application/x-www-form-urlencoded"
    }
    
    # Cr√©er un produit Pro
    product_data = {
        "name": "Francis Pro",
        "description": "Abonnement Francis Pro - Interface professionnelle"
    }
    
    try:
        response = requests.post(
            "https://api.stripe.com/v1/products",
            headers=headers,
            data=product_data,
            timeout=10
        )
        
        if response.status_code == 200:
            product = response.json()
            product_id = product["id"]
            print(f"‚úÖ Produit Pro cr√©√© : {product_id}")
            
            # Cr√©er le prix mensuel Pro (49‚Ç¨ exactement)
            monthly_price_data = {
                "unit_amount": 4900,  # 49.00‚Ç¨
                "currency": "eur",
                "recurring[interval]": "month",
                "product": product_id
            }
            
            response = requests.post(
                "https://api.stripe.com/v1/prices",
                headers=headers,
                data=monthly_price_data,
                timeout=10
            )
            
            if response.status_code == 200:
                monthly_price = response.json()
                monthly_price_id = monthly_price["id"]
                print(f"‚úÖ Prix mensuel Pro cr√©√© : {monthly_price_id} (49.00‚Ç¨/mois)")
            else:
                print(f"‚ùå Erreur cr√©ation prix mensuel Pro : {response.status_code}")
                return None
            
            # Cr√©er le prix annuel Pro (490‚Ç¨ exactement)
            annual_price_data = {
                "unit_amount": 49000,  # 490.00‚Ç¨
                "currency": "eur",
                "recurring[interval]": "year",
                "product": product_id
            }
            
            response = requests.post(
                "https://api.stripe.com/v1/prices",
                headers=headers,
                data=annual_price_data,
                timeout=10
            )
            
            if response.status_code == 200:
                annual_price = response.json()
                annual_price_id = annual_price["id"]
                print(f"‚úÖ Prix annuel Pro cr√©√© : {annual_price_id} (490.00‚Ç¨/an)")
            else:
                print(f"‚ùå Erreur cr√©ation prix annuel Pro : {response.status_code}")
                return None
            
            return {
                "monthly": monthly_price_id,
                "annual": annual_price_id
            }
            
        else:
            print(f"‚ùå Erreur cr√©ation produit Pro : {response.status_code}")
            return None
            
    except Exception as e:
        print(f"‚ùå Erreur cr√©ation : {e}")
        return None

if __name__ == "__main__":
    print("üöÄ Cr√©ation des prix Pro corrig√©s pour Francis")
    print("=" * 50)
    
    pro_prices = create_corrected_pro_prices()
    
    if pro_prices:
        print(f"\n‚úÖ Prix Pro corrig√©s cr√©√©s avec succ√®s !")
        print(f"üìã Prix mensuel Pro : {pro_prices['monthly']} (49.00‚Ç¨/mois)")
        print(f"üìã Prix annuel Pro : {pro_prices['annual']} (490.00‚Ç¨/an)")
        print("\nüìù Actions √† effectuer :")
        print("   1. Mettez √† jour frontend/src/config/pricing.ts")
        print("   2. Remplacez les IDs des prix Pro")
        print("   3. Testez les paiements Pro")
    else:
        print("‚ùå √âchec de la cr√©ation des prix Pro corrig√©s") 