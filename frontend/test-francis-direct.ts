// üß™ Test Direct Francis AI Engine
import { FrancisAIEngine } from './src/ai/FrancisAIEngine';

async function testFrancisAI() {
  console.log('üöÄ Francis AI Engine - Test Direct\n');
  
  // Initialiser Francis
  const francis = new FrancisAIEngine();
  console.log('‚úÖ Francis AI Engine initialis√©\n');
  
  // Test 1: Calcul IRPF 50k‚Ç¨
  console.log('üí∞ TEST 1: Calcul IRPF 50 000‚Ç¨');
  try {
    const response1 = await francis.processMessage('Calcule mon IRPF pour 50000 euros', { previousMessages: [] });
    console.log('‚úÖ R√©ponse g√©n√©r√©e:', response1.text.substring(0, 200) + '...');
    console.log('üìä Confiance:', response1.confidence);
    console.log('üßÆ Calculs:', response1.calculations ? 'Pr√©sents' : 'Absents');
    console.log('üìö R√©f√©rences l√©gales:', response1.lawReferences?.join(', ') || 'Aucune');
    console.log('');
  } catch (error) {
    console.log('‚ùå Erreur:', error);
  }
  
  // Test 2: Calcul IRPF 30k‚Ç¨
  console.log('üí∞ TEST 2: Calcul IRPF 30 000‚Ç¨');
  try {
    const response2 = await francis.processMessage('Combien je paie d\'imp√¥t avec 30000‚Ç¨ ?', { previousMessages: [] });
    console.log('‚úÖ R√©ponse g√©n√©r√©e:', response2.text.substring(0, 200) + '...');
    console.log('üìä Confiance:', response2.confidence);
    console.log('üßÆ Calculs:', response2.calculations ? 'Pr√©sents' : 'Absents');
    console.log('');
  } catch (error) {
    console.log('‚ùå Erreur:', error);
  }
  
  // Test 3: Info g√©n√©rale IRPF
  console.log('üìö TEST 3: Information g√©n√©rale IRPF');
  try {
    const response3 = await francis.processMessage('Comment fonctionne l\'IRPF en Andorre ?', { previousMessages: [] });
    console.log('‚úÖ R√©ponse g√©n√©r√©e:', response3.text.substring(0, 200) + '...');
    console.log('üìä Confiance:', response3.confidence);
    console.log('‚ùì Questions de suivi:', response3.followUpQuestions?.length || 0);
    console.log('');
  } catch (error) {
    console.log('‚ùå Erreur:', error);
  }
  
  // Test 4: Conseils d'optimisation
  console.log('üéØ TEST 4: Conseils optimisation');
  try {
    const response4 = await francis.processMessage('Comment optimiser ma fiscalit√© ?', { previousMessages: [] });
    console.log('‚úÖ R√©ponse g√©n√©r√©e:', response4.text.substring(0, 200) + '...');
    console.log('üìä Confiance:', response4.confidence);
    console.log('');
  } catch (error) {
    console.log('‚ùå Erreur:', error);
  }
  
  // Test 5: Test calculateur direct
  console.log('üßÆ TEST 5: Calculateurs directs');
  try {
    // Test des revenus types
    const testIncomes = [25000, 35000, 50000, 75000, 100000];
    
    console.log('Calculs IRPF directs:');
    testIncomes.forEach(income => {
      // @ts-ignore - acc√®s aux calculateurs priv√©s pour test
      const result = francis.calculators.irpf(income);
      console.log(`  ${income.toLocaleString()}‚Ç¨ ‚Üí Imp√¥t: ${result.tax.toLocaleString()}‚Ç¨ (${result.effectiveRate}%)`);
    });
    
    console.log('‚úÖ Tous les calculateurs fonctionnent');
  } catch (error) {
    console.log('‚ùå Erreur calculateurs:', error);
  }
  
  console.log('\nüéâ Tests termin√©s !');
}

// Ex√©cuter les tests
testFrancisAI().catch(console.error);
