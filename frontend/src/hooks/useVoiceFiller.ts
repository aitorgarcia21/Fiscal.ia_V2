import { useState, useCallback } from 'react';
import { ClientProfile } from '../types/clientProfile';

export function useVoiceFiller(initialProfile: Partial<ClientProfile>) {
  const [profile, setProfile] = useState<Partial<ClientProfile>>(initialProfile);
  const [suggestions, setSuggestions] = useState<string[]>([]);
  const [conversationHistory, setConversationHistory] = useState<string[]>([]);
  
  const MAX_CONTEXT_TURNS = 3; // Garde les 3 derni√®res phrases

  /**
   * üöÄ FRANCIS IA - SYST√àME D'EXTRACTION S√âMANTIQUE ULTRA-AVANC√â
   * Comprendrai TOUT avec l'IA contextuelle multi-tour !
   */

  /**
   * üéØ FRANCIS COACH PROACTIF - SUGGESTIONS INTELLIGENTES √âTAPES GUID√âES
   */
  const computeProactiveSuggestions = useCallback((currentProfile: Partial<ClientProfile>): {
    nextQuestions: string[];
    completionRate: number;
    inconsistencies: string[];
    stage: string;
  } => {
    const suggestions: string[] = [];
    const inconsistencies: string[] = [];
    let filledFields = 0;
    const totalFields = 12; // Nombre total de champs principaux
    
    // üìã √âTAPES GUID√âES INTELLIGENTES
    
    // 1Ô∏è‚É£ IDENTIT√â
    if (!currentProfile.nom_client) {
      suggestions.push("üë§ Demandez : 'Pouvez-vous me dire votre nom de famille ?'");
    } else filledFields++;
    
    if (!currentProfile.prenom_client) {
      suggestions.push("üë§ Demandez : 'Et votre pr√©nom ?'");
    } else filledFields++;
    
    if (!currentProfile.date_naissance_client) {
      suggestions.push("üéÇ Demandez : 'Quelle est votre date de naissance ?'");
    } else filledFields++;
    
    // 2Ô∏è‚É£ SITUATION FAMILIALE
    if (!currentProfile.situation_maritale_client) {
      suggestions.push("üíí Demandez : '√ätes-vous mari√©(e), c√©libataire, divorc√©(e) ?'");
    } else filledFields++;
    
    if (!currentProfile.nombre_enfants_a_charge_client) {
      suggestions.push("üë∂ Demandez : 'Avez-vous des enfants √† charge ?'");
    } else filledFields++;
    
    // 3Ô∏è‚É£ ACTIVIT√â PROFESSIONNELLE
    if (!currentProfile.profession_client1) {
      suggestions.push("üíº Demandez : 'Quelle est votre profession ?'");
    } else filledFields++;
    
    if (!currentProfile.revenu_net_annuel_client1) {
      suggestions.push("üí∞ Demandez : 'Quels sont vos revenus nets annuels ?'");
    } else filledFields++;
    
    // 4Ô∏è‚É£ PATRIMOINE IMMOBILIER
    if (!currentProfile.residence_principale_details) {
      suggestions.push("üè† Demandez : 'Quelle est la valeur de votre r√©sidence principale ?'");
    } else filledFields++;
    
    if (!currentProfile.autres_biens_immobiliers_details) {
      suggestions.push("üè¢ Demandez : 'Avez-vous d'autres biens immobiliers (locatif, terrain) ?'");
    } else filledFields++;
    
    // 5Ô∏è‚É£ SITUATION FINANCI√àRE
    if (!currentProfile.comptes_courants_solde_total_estime && !currentProfile.livrets_epargne_details) {
      suggestions.push("üí≥ Demandez : 'Quel montant avez-vous en √©pargne (livrets, comptes) ?'");
    } else filledFields++;
    
    if (!currentProfile.assurance_vie_details && !currentProfile.compte_titres_valeur_estimee) {
      suggestions.push("üìà Demandez : 'Avez-vous des investissements (actions, assurance-vie, SCPI) ?'");
    } else filledFields++;
    
    if (!currentProfile.credits_consommation_encours_total) {
      suggestions.push("üè¶ Demandez : 'Avez-vous des cr√©dits en cours (immobilier, conso) ?'");
    } else filledFields++;
    
    // üö® D√âTECTION D'INCOH√âRENCES INTELLIGENTES
    if (currentProfile.situation_maritale_client === 'C√©libataire' && 
        currentProfile.nombre_enfants_a_charge_client && 
        currentProfile.nombre_enfants_a_charge_client > 0) {
      inconsistencies.push('‚ö†Ô∏è V√©rifiez : C√©libataire avec enfants (parent solo ?)');
    }
    
    // V√©rification des revenus vs patrimoine
    if (currentProfile.revenu_net_annuel_client1 && 
        typeof currentProfile.revenu_net_annuel_client1 === 'number' &&
        currentProfile.revenu_net_annuel_client1 < 30000 && 
        (currentProfile.compte_titres_valeur_estimee && 
         typeof currentProfile.compte_titres_valeur_estimee === 'number' &&
         currentProfile.compte_titres_valeur_estimee > 50000)) {
      inconsistencies.push('‚ö†Ô∏è V√©rifiez : Revenus modestes mais gros investissements');
    }
    
    // üìä √âTAPES INTELLIGENTES
    let stage = 'D√©but d\'entretien';
    const completionRate = (filledFields / totalFields) * 100;
    
    if (completionRate < 25) stage = '1Ô∏è‚É£ Identit√© et situation';
    else if (completionRate < 50) stage = '2Ô∏è‚É£ Activit√© professionnelle';
    else if (completionRate < 75) stage = '3Ô∏è‚É£ Patrimoine immobilier';
    else if (completionRate < 90) stage = '4Ô∏è‚É£ Situation financi√®re';
    else stage = '‚úÖ Profil complet - Analyse fiscale';
    
    return {
      nextQuestions: suggestions.slice(0, 3), // Limite √† 3 suggestions max
      completionRate: Math.round(completionRate),
      inconsistencies,
      stage
    };
  }, []);

  /**
   * ü§ñ FRANCIS IA S√âMANTIQUE - ANALYSE CONTEXTUELLE MULTI-TOUR
   * Utilise l'historique des conversations pour une compr√©hension parfaite
   */
  const analyzeWithFrancisAI = useCallback(async (text: string, history: string[]): Promise<Partial<ClientProfile>> => {
    try {
      const contextWithHistory = history.length > 0 
        ? history.join(' | ') + ' | ' + text
        : text;
      
      console.log('üß† Francis IA analyse avec contexte:', {
        currentText: text,
        history: history,
        fullContext: contextWithHistory
      });
      
      const response = await fetch('/api/test-francis', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          question: `üß† FRANCIS - EXPERT CONTEXTUEL MULTI-TOUR ULTRA-POINTU
          
          MISSION: Analyser cette conversation avec CONTEXTE COMPLET pour extraction parfaite.
          
          CONTEXTE CONVERSATIONNEL: "${contextWithHistory}"
          PHRASE ACTUELLE: "${text}"
          
          üöÄ INTELLIGENCE CONTEXTUELLE R√âVOLUTIONNAIRE:
          ‚úÖ ANALYSE NARRATIVE: comprend le fil de l'entretien sur plusieurs phrases
          ‚úÖ RECONSTITUTION: "Je suis..." + "euh..." + "Jean Dupont" = extraction compl√®te
          ‚úÖ M√âMOIRE CONVERSATIONNELLE: utilise l'historique pour disambigu√Øser
          ‚úÖ CORRECTION CONTEXTUELLE: corrige avec l'aide du contexte pr√©c√©dent
          
          üß† INTELLIGENCE MAXIMALE REQUISE:
          Tu es le MEILLEUR LINGUISTE CONTEXTUEL au monde ! Ton travail est de comprendre
          les conversations humaines m√™me quand elles sont h√©sitantes, mal articul√©es,
          coup√©es, avec des "euh", des r√©p√©titions, des corrections, etc.
          
          üö´ REJETTE ABSOLUMENT:
          - Interjections: euh, ah, oh, hein, bon, alors, voil√†, ben
          - Questions: c'est quoi, comment, pourquoi, qu'est-ce que
          - Temporel: jour, heure, maintenant, aujourd'hui
          - Non-sens: aberrant, bizarre, wtf, expressions √©motionnelles
          - H√©sitations pures sans contenu informatif
          
          üéØ CHAMPS AUTORIS√âS ULTRA-COMPLETS (TOUS LES 80+ CHAMPS) :
          
          üíº IDENTIT√â :
          - nom_client: noms de famille fran√ßais
          - prenom_client: pr√©noms fran√ßais 
          - civilite_client: "Monsieur", "Madame", "Mademoiselle"
          - date_naissance_client: dates format DD/MM/YYYY
          - lieu_naissance_client: villes de naissance
          - nationalite_client: nationalit√©s
          - numero_fiscal_client: num√©ros fiscaux (13 chiffres)
          
          üìç COORDONN√âES :
          - adresse_postale_client: adresses compl√®tes
          - code_postal_client: codes postaux (5 chiffres)
          - ville_client: noms de villes
          - pays_residence_fiscale_client: pays de r√©sidence
          - email_client: adresses email
          - telephone_principal_client: num√©ros de t√©l√©phone
          - telephone_secondaire_client: t√©l√©phones secondaires
          
          üë®‚Äçüë©‚Äçüëß‚Äçüë¶ FAMILLE :
          - situation_maritale_client: "Mari√©(e)", "C√©libataire", "Divorc√©(e)", "Pacs√©(e)", "Veuf/Veuve"
          - date_mariage_pacs_client: dates mariage/PACS
          - regime_matrimonial_client: r√©gimes matrimoniaux
          - nombre_enfants_a_charge_client: nombre d'enfants
          - details_enfants_client: √¢ges/d√©tails enfants
          - personnes_dependantes_client: personnes √† charge
          
          üíº PROFESSION CLIENT 1 :
          - profession_client1: m√©tiers/professions
          - statut_professionnel_client1: "Salari√©", "Ind√©pendant", "Fonctionnaire", "Retrait√©"
          - nom_employeur_entreprise_client1: noms employeurs
          - type_contrat_client1: "CDI", "CDD", "Freelance", "Stage"
          - revenu_net_annuel_client1: revenus annuels
          - autres_revenus_client1: revenus compl√©mentaires
          
          üíº PROFESSION CLIENT 2 (CONJOINT) :
          - profession_client2: profession conjoint
          - statut_professionnel_client2: statut conjoint
          - nom_employeur_entreprise_client2: employeur conjoint
          - type_contrat_client2: contrat conjoint
          - revenu_net_annuel_client2: revenus conjoint
          - autres_revenus_client2: autres revenus conjoint
          
          üí∏ REVENUS FOYER :
          - revenus_fonciers_annuels_bruts_foyer: revenus locatifs
          - charges_foncieres_deductibles_foyer: charges d√©ductibles
          - revenus_capitaux_mobiliers_foyer: dividendes/int√©r√™ts
          - plus_values_mobilieres_foyer: plus-values actions
          - plus_values_immobilieres_foyer: plus-values immobilier
          - benefices_industriels_commerciaux_foyer: BIC
          - benefices_non_commerciaux_foyer: BNC
          - pensions_retraites_percues_foyer: pensions retraite
          - pensions_alimentaires_percues_foyer: pensions alimentaires
          - autres_revenus_foyer_details: autres revenus
          
          üè† PATRIMOINE IMMOBILIER :
          - residence_principale_details: r√©sidence principale
          - residences_secondaires_details: r√©sidences secondaires
          - investissements_locatifs_details: investissements locatifs
          - autres_biens_immobiliers_details: autres biens immobiliers
          
          üí∞ PATRIMOINE FINANCIER :
          - comptes_courants_solde_total_estime: comptes courants
          - livrets_epargne_details: livrets d'√©pargne
          - assurance_vie_details: assurances vie
          - pea_details: PEA
          - compte_titres_valeur_estimee: comptes titres
          - epargne_retraite_details: √©pargne retraite
          - autres_placements_financiers_details: autres placements
          - valeur_entreprise_parts_sociales: parts d'entreprises
          - comptes_courants_associes_solde: comptes courants associ√©s
          - vehicules_valeur_estimee: v√©hicules
          - objets_art_valeur_estimee: objets d'art
          
          üí≥ DETTES :
          - credits_consommation_encours_total: cr√©dits consommation
          - autres_dettes_details: autres dettes
          
          üéØ OBJECTIFS :
          - objectifs_fiscaux_client: objectifs fiscaux
          - objectifs_patrimoniaux_client: objectifs patrimoniaux
          - horizon_placement_client: horizon placement
          - profil_risque_investisseur_client: profil de risque
          - notes_objectifs_projets_client: notes objectifs
          
          üìä FISCAL :
          - dernier_avis_imposition_details: dernier avis d'imposition
          - tranche_marginale_imposition_estimee: TMI
          - credits_reductions_impot_recurrents: cr√©dits d'imp√¥t
          - ifi_concerne_client: concern√© par l'IFI
          - notes_fiscales_client: notes fiscales
          
          üìù EXEMPLES OBLIGATOIRES - APPRENDS CES PATTERNS :
          
          üíí STATUT MATRIMONIAL :
          "vous √™tes mari√©s" ‚Üí {"situation_maritale_client": "Mari√©(e)"}
          "nous sommes mari√©s" ‚Üí {"situation_maritale_client": "Mari√©(e)"}
          "je suis mari√©" ‚Üí {"situation_maritale_client": "Mari√©(e)"}
          "mari√©e depuis" ‚Üí {"situation_maritale_client": "Mari√©(e)"}
          "c√©libataire" ‚Üí {"situation_maritale_client": "C√©libataire"}
          "divorc√©" ‚Üí {"situation_maritale_client": "Divorc√©(e)"}
          "pacs√©" ‚Üí {"situation_maritale_client": "Pacs√©(e)"}
          
          üíº NOMS :
          Contexte: "Je suis... euh... comment dire" | Actuel: "Jean Dupont"
          ‚Üí {"prenom_client": "Jean", "nom_client": "DUPONT"}
          
          üë∂ ENFANTS :
          "vous avez deux gosses" ‚Üí {"nombre_enfants_a_charge_client": "2"}
          "j'ai trois enfants" ‚Üí {"nombre_enfants_a_charge_client": "3"}
          "une fille" ‚Üí {"nombre_enfants_a_charge_client": "1"}
          "pas d'enfants" ‚Üí {"nombre_enfants_a_charge_client": "0"}
          "deux gamins" ‚Üí {"nombre_enfants_a_charge_client": "2"}
          "trois petits" ‚Üí {"nombre_enfants_a_charge_client": "3"}
          
          üéÇ DATE NAISSANCE :
          "n√© le 1er mars 1980" ‚Üí {"date_naissance_client": "01/03/1980"}
          "1er janvier 1975" ‚Üí {"date_naissance_client": "01/01/1975"}
          "15 juin 1985" ‚Üí {"date_naissance_client": "15/06/1985"}
          "je suis n√© en 1980" ‚Üí {"date_naissance_client": "01/01/1980"}
          
          üè† PATRIMOINE IMMOBILIER :
          "maison 300000" ‚Üí {"residence_principale_details": "Maison principale 300000‚Ç¨"}
          "appartement 250000" ‚Üí {"residence_principale_details": "Appartement principal 250000‚Ç¨"}
          "r√©sidence vaut 400000" ‚Üí {"residence_principale_details": "R√©sidence principale 400000‚Ç¨"}
          "chez moi 500000 euros" ‚Üí {"residence_principale_details": "R√©sidence principale 500000‚Ç¨"}
          
          üíç R√âGIME MATRIMONIAL :
          "r√©gime de la communaut√©" ‚Üí {"regime_matrimonial_client": "Communaut√© r√©duite aux acqu√™ts"}
          "communaut√©" ‚Üí {"regime_matrimonial_client": "Communaut√© r√©duite aux acqu√™ts"}
          "s√©paration de biens" ‚Üí {"regime_matrimonial_client": "S√©paration de biens"}
          "communaut√© universelle" ‚Üí {"regime_matrimonial_client": "Communaut√© universelle"}
          
          üí∞ REVENUS :
          "je gagne 50000 euros" ‚Üí {"revenu_net_annuel_client1": "50000"}
          "salaire 3000 par mois" ‚Üí {"revenu_net_annuel_client1": "36000"}
          "revenus annuels 80000" ‚Üí {"revenu_net_annuel_client1": "80000"}
          
          üìç COORDONN√âES COMPL√àTES :
          "j'habite 15 rue de la Paix" ‚Üí {"adresse_postale_client": "15 rue de la Paix"}
          "75001 Paris" ‚Üí {"code_postal_client": "75001", "ville_client": "Paris"}
          "email jean@gmail.com" ‚Üí {"email_client": "jean@gmail.com"}
          "t√©l√©phone 06 12 34 56 78" ‚Üí {"telephone_principal_client": "06 12 34 56 78"}
          "nationalit√© fran√ßaise" ‚Üí {"nationalite_client": "Fran√ßaise"}
          
          üíº PROFESSION AVANC√âE :
          "avocat chez Dupont" ‚Üí {"profession_client1": "Avocat", "nom_employeur_entreprise_client1": "Dupont"}
          "CDI Google" ‚Üí {"type_contrat_client1": "CDI", "nom_employeur_entreprise_client1": "Google"}
          "fonctionnaire" ‚Üí {"statut_professionnel_client1": "Fonctionnaire"}
          "ma femme m√©decin 80000" ‚Üí {"profession_client2": "M√©decin", "revenu_net_annuel_client2": "80000"}
          
          üè† PATRIMOINE √âTENDU :
          "r√©sidence secondaire Nice" ‚Üí {"residences_secondaires_details": "R√©sidence secondaire Nice"}
          "appartement locatif 200000" ‚Üí {"investissements_locatifs_details": "Appartement locatif 200000‚Ç¨"}
          "revenus locatifs 1000 mois" ‚Üí {"revenus_fonciers_annuels_bruts_foyer": "12000"}
          
          üí∞ √âPARGNE COMPL√àTE :
          "livret A 50000" ‚Üí {"livrets_epargne_details": "Livret A 50000‚Ç¨"}
          "assurance vie 100000" ‚Üí {"assurance_vie_details": "Assurance vie 100000‚Ç¨"}
          "PEA 30000" ‚Üí {"pea_details": "PEA 30000‚Ç¨"}
          "actions Total" ‚Üí {"compte_titres_valeur_estimee": "Actions Total"}
          
          üéØ OBJECTIFS :
          "r√©duire imp√¥ts" ‚Üí {"objectifs_fiscaux_client": "R√©duction fiscale"}
          "achat r√©sidence" ‚Üí {"objectifs_patrimoniaux_client": "Achat r√©sidence"}
          "placement long terme" ‚Üí {"horizon_placement_client": "Long terme"}
          "profil prudent" ‚Üí {"profil_risque_investisseur_client": "Prudent"}
          
          FORMAT R√âPONSE: JSON pur seulement - PAS DE TEXTE EN PLUS
          SI AUCUNE INFO FISCALE VALIDE: {}
          
          SOIS LE MEILLEUR LINGUISTE CONTEXTUEL AU MONDE ! üî•`
        })
      });

      let extractedData: Partial<ClientProfile> = {};
      
      if (response.ok) {
        const result = await response.json();
        console.log('ü§ñ Francis IA r√©ponse compl√®te:', result);
        
        // La r√©ponse est maintenant un objet avec answer, sources, confidence
        const francisAnswer = result.answer || '';
        console.log('ü§ñ Francis IA answer:', francisAnswer);
        
        try {
          // Chercher JSON dans la r√©ponse Francis
          const jsonMatch = francisAnswer.match(/\{[^{}]*\}/);
          if (jsonMatch) {
            extractedData = JSON.parse(jsonMatch[0]);
            console.log('üéØ Francis IA extraction r√©ussie:', extractedData);
          } else {
            console.log('ü§ñ Francis IA: Aucun JSON trouv√© dans:', francisAnswer);
          }
        } catch (e) {
          console.log('ü§ñ Francis IA: Erreur parsing JSON:', e);
          console.log('ü§ñ Contenu √† parser:', francisAnswer);
        }
      } else {
        console.error('Erreur API Francis:', response.status);
      }
      
      return extractedData;
    } catch (error) {
      console.error('Erreur Francis IA:', error);
      return {};
    }
  }, []);

  /**
   * Traitement d'un snippet de transcript - VERSION CONTEXTUELLE MULTI-TOUR
   */
  const handleTranscript = useCallback(
    async (text: string) => {
      if (!text) return;
      
      // üß† GESTION M√âMOIRE CONVERSATIONNELLE
      const updatedHistory = [...conversationHistory];
      
      // Ajouter la nouvelle phrase et garder seulement les N derni√®res
      updatedHistory.push(text);
      if (updatedHistory.length > MAX_CONTEXT_TURNS) {
        updatedHistory.shift(); // Supprimer la plus ancienne
      }
      
      // Mettre √† jour l'historique
      setConversationHistory(updatedHistory);
      
      console.log('üß† Francis IA analyse CONTEXTUELLE:', {
        currentText: text,
        conversationHistory: updatedHistory,
        contextDepth: updatedHistory.length
      });
      
      let updated: Partial<ClientProfile> = { ...profile };
      let matched = false;
      let matchDetails: string[] = [];

      try {
        // üß† PHASE R√âVOLUTIONNAIRE: ANALYSE CONTEXTUELLE MULTI-TOUR
        const aiExtractedData = await analyzeWithFrancisAI(text, updatedHistory);
        
        // Appliquer les donn√©es extraites par l'IA
        Object.entries(aiExtractedData).forEach(([key, value]) => {
          if (value && typeof value === 'string' && value.trim() !== '') {
            const cleanValue = value.trim();
            // Validation finale de s√©curit√©
            if (cleanValue.length >= 2 && cleanValue.length <= 50) {
              (updated as any)[key] = cleanValue;
              matched = true;
              matchDetails.push(`ü§ñ IA ${key}: ${cleanValue}`);
              console.log(`ü§ñ Francis IA a trouv√© ${key}:`, cleanValue);
            }
          }
        });

        if (matched) {
          console.log('üéØ Francis IA CONTEXTUELLE met √† jour le profil:', matchDetails);
          setProfile(updated);
          const proactiveData = computeProactiveSuggestions(updated);
          setSuggestions(proactiveData.nextQuestions);
          
          // Log coaching proactif
          console.log('üéØ Francis COACH PROACTIF:', {
            stage: proactiveData.stage,
            completion: proactiveData.completionRate + '%',
            suggestions: proactiveData.nextQuestions,
            inconsistencies: proactiveData.inconsistencies
          });
        } else {
          console.log('üß† Francis IA CONTEXTUELLE: Aucune information fiscale pertinente d√©tect√©e dans ce contexte');
        }
      } catch (e) {
        console.error('Erreur Francis IA CONTEXTUELLE:', e);
      }
    },
    [profile, computeProactiveSuggestions, analyzeWithFrancisAI, conversationHistory, setConversationHistory, MAX_CONTEXT_TURNS]
  );

  return { profile, suggestions, handleTranscript };
}
